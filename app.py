import os
from flask import Flask, render_template, request
import requests
from datetime import datetime, timedelta

app = Flask(__name__)

# ‚öΩ –¢–í–û–ô API –∫–ª—é—á –í–°–¢–ê–í–¨ –°–Æ–î–ê
API_KEY = "8bd7548e336c4f338735954ad912..."   # <-- –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π –∫–ª—é—á
headers = {"X-Auth-Token": API_KEY}

# –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä—ã
COMPETITIONS = {
    "PL": "–ê–Ω–≥–ª–∏–π—Å–∫–∞—è –ü—Ä–µ–º—å–µ—Ä-–ª–∏–≥–∞",
    "PD": "–õ–∞ –õ–∏–≥–∞ (–ò—Å–ø–∞–Ω–∏—è)",
    "SA": "–°–µ—Ä–∏—è –ê (–ò—Ç–∞–ª–∏—è)",
    "BL1": "–ë—É–Ω–¥–µ—Å–ª–∏–≥–∞ (–ì–µ—Ä–º–∞–Ω–∏—è)",
    "FL1": "–õ–∏–≥–∞ 1 (–§—Ä–∞–Ω—Ü–∏—è)",
    "CL": "–õ–∏–≥–∞ –ß–µ–º–ø–∏–æ–Ω–æ–≤"
}

def fetch_matches(page, competition=None, page_size=20):
    today = datetime.today()
    date_from = (today - timedelta(days=180)).strftime("%Y-%m-%d")
    date_to = today.strftime("%Y-%m-%d")

    params = {
        "dateFrom": date_from,
        "dateTo": date_to,
    }

    if competition:
        url = f"https://api.football-data.org/v4/competitions/{competition}/matches"
    else:
        url = "https://api.football-data.org/v4/matches"

    response = requests.get(url, headers=headers, params=params)

    # –õ–æ–≥ –≤ –∫–æ–Ω—Å–æ–ª—å
    print("‚öΩ URL:", response.url)
    print("üì¶ –û—Ç–≤–µ—Ç:", response.text[:500])

    if response.status_code != 200:
        return [{"error": f"–û—à–∏–±–∫–∞ {response.status_code}: {response.text}"}]

    data = response.json()
    matches = data.get("matches", [])

    if not matches:
        return [{"error": f"–ù–µ—Ç –º–∞—Ç—á–µ–π –∑–∞ –ø–µ—Ä–∏–æ–¥ {date_from} ‚Äî {date_to}. –û—Ç–≤–µ—Ç API: {response.text[:200]}"}]

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è ‚Äî –ø–æ 20 –º–∞—Ç—á–µ–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    start = (page - 1) * page_size
    end = start + page_size
    return matches[start:end]

    params = {
        "dateFrom": date_from,
        "dateTo": date_to,
    }

    if competition:
        url = f"https://api.football-data.org/v4/competitions/{competition}/matches"
    else:
        url = "https://api.football-data.org/v4/matches"

    response = requests.get(url, headers=headers, params=params)

    if response.status_code != 200:
        print("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:", response.text)
        return []

    data = response.json()
    matches = data.get("matches", [])

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è –ø–æ 20 –º–∞—Ç—á–µ–π
    start = (page - 1) * page_size
    end = start + page_size
    return matches[start:end]

@app.route("/")
def index():
    page = int(request.args.get("page", 1))
    competition = request.args.get("competition")

    matches = fetch_matches(page, competition)

    return render_template(
        "index.html",
        matches=matches,
        competitions=COMPETITIONS,
        current_competition=competition,
        page=page
    )

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)